spring:
  application:
    name: cartonization-service

  profiles:
    active: local

  data:
    mongodb:
      uri: mongodb://${MONGO_HOST:localhost}:${MONGO_PORT:27017}/${MONGO_DATABASE:cartonization}${MONGO_AUTH_SOURCE:}
      auto-index-creation: false

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 50
        max-idle: 25
        min-idle: 10
      shutdown-timeout: 100ms

  kafka:
    bootstrap-servers: localhost:9092

  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false

app:
  rest:
    connect-timeout: 5000
    read-timeout: 10000
    max-connections: 100
    logging-enabled: true
  async:
    core-pool-size: 5
    max-pool-size: 20
    queue-capacity: 100
    keep-alive-seconds: 60
    thread-name-prefix: "async-task-"
  scheduling:
    pool-size: 5
    thread-name-prefix: "scheduled-task-"
  redis:
    cache:
      default-ttl: 600s
      carton-ttl: 1800s
      product-ttl: 3600s
      packing-solution-ttl: 900s
  kafka:
    topics:
      cartonization-requests: order-fulfillment-core.cartonization.requests
      cartonization-responses: order-fulfillment-core.cartonization.responses
      cartonization-solutions: order-fulfillment-core.cartonization.solutions
      cartonization-events: order-fulfillment-core.cartonization.events
      carton-management-requests: order-fulfillment-core.cartonization.management-requests
      cartonization-requests-dlq: order-fulfillment-core.cartonization.requests.dlq
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:cartonization-service}
      auto-offset-reset: earliest
      enable-auto-commit: false
      session-timeout-ms: 30000
      heartbeat-interval-ms: 10000
      max-poll-records: 500
      max-poll-interval-ms: 300000
      concurrency: 3
    producer:
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 10
      buffer-memory: 33554432
      compression-type: snappy
      request-timeout-ms: 30000
      delivery-timeout-ms: 120000
  cache:
    warmup:
      enabled: true
      common-skus:
        - PROD001
        - PROD002
        - PROD003

integration:
  product-catalog:
    base-url: ${PRODUCT_CATALOG_BASE_URL:http://localhost:8081}

resilience4j:
  circuitbreaker:
    instances:
      product-catalog:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 100
        minimum-number-of-calls: 20
        failure-rate-threshold: 30
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 10
        automatic-transition-from-open-to-half-open-enabled: true

  retry:
    instances:
      product-catalog:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.net.SocketTimeoutException

  bulkhead:
    instances:
      product-catalog:
        max-concurrent-calls: 25
        max-wait-duration: 100ms

  thread-pool-bulkhead:
    instances:
      product-catalog:
        max-thread-pool-size: 10
        core-thread-pool-size: 5
        queue-capacity: 50
        keep-alive-duration: 20ms

  ratelimiter:
    instances:
      cartonization-api:
        limit-for-period: 100
        limit-refresh-period: 1s
        timeout-duration: 0

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: dev
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces
  loki:
    url: http://localhost:3100

logging:
  level:
    com.paklog.cartonization: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - [%X{correlationId}] [%X{requestId}] %msg%n"

server:
  port: 8084
  error:
    include-message: always
    include-binding-errors: always

cors:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:8080
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - OPTIONS
  allowed-headers:
    - "*"
  allow-credentials: true
  max-age: 3600

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha

product-catalog:
  base-url: http://localhost:8081
  timeout: 5000